<?xml version="1.0"?>
<launch>
	
	<!-- Feedback arguments -->
		<arg name="modality" 	 default='control'/>
		<arg name="thresholds"   default='[0.9, 0.9]'/>
		<arg name="classes"      default='[771, 773]'/>
			
	<!-- controller arguments -->
		<arg name="is_discrete"			default='False'/>
		<arg name="linear_strength"		default='0.1'/>
		<arg name="angular_strength"	default='0.1'/>

	<!-- game arguments -->
		<arg name="game_address"	default='10.7.30.23'/>
		<arg name="game_port"   default='59075'/>

	<!-- acquisition arguments -->
		<arg name="plugin" default='rosneuro::EGDDevice'/>
		<arg name="devarg" default='$(env HOME)/Desktop/test16channels.gdf'/>
		<arg name="framerate"  default='16'/>
		<arg name="samplerate" default='512'/>
			
	<!-- recorder -->
		<arg name="autostart" default='true'/>
		<arg name="filepath"  default='/home/ltonin/Desktop/' />

	<!-- processing arguments -->
		<arg name="lap_path"      default='$(env HOME)/Desktop/laplacian16.dat'/>
		<arg name="decoder_path"  default='$(env HOME)/Desktop/classifier16channels.dat'/>
		<arg name="n_channels"    default='16'/>
		<arg name="eog_threshold" default='43.0'/> 

	<!-- control framework arguments -->
		<arg name="integratorplugin"	default="rosneuro::integrator::Exponential"/>
		<arg name="alpha" 	    	 	default='0.98'/>
		<arg name="rejections" 	       	default='[0.8, 0.8]'/>

	<!-- protocol arguments -->
		<arg name="subject"   default="xx"/>
		<arg name="task"      default="mi_bhbf"/>
		<arg name="extra"     default=""/>
			
	<!-- Protocol parameters -->
		<rosparam param="/protocol/subject"	 subst_value="True">$(arg subject)</rosparam>
		<rosparam param="/protocol/modality" subst_value="True">$(arg modality)</rosparam>
		<rosparam param="/protocol/task"	 subst_value="True">$(arg task)</rosparam>
		<rosparam param="/protocol/extra"	 subst_value="True">$(arg extra)</rosparam>

	<!-- aquisition node -->
	<node name="acquisition" pkg="rosneuro_acquisition" type="acquisition" output="screen" >
		<param name="~plugin" 	  value="$(arg plugin)"/>
		<param name="~devarg" 	  value="$(arg devarg)"/>
		<param name="~samplerate" value="$(arg samplerate)"/>
		<param name="~framerate"  value="$(arg framerate)"/>
	</node>
	
	<!-- recorder node -->
	<node name="recorder" pkg="rosneuro_recorder" type="recorder" >
		<param name="~autostart" value="$(arg autostart)"/>
		<param name="~filepath" value="$(arg filepath)"/>
	</node>
  
	<!-- processing node -->
	<node name="smrbci" pkg="rosneuro_processing" type="test_smrbci" output="screen">
		<param name="~lap_path" value="$(arg lap_path)"/>
		<param name="~decoder_path" value="$(arg decoder_path)"/>
		<param name="~n_channels" value="$(arg n_channels)"/>
	</node>
  
	<!-- integrator node -->
	<node name="integrator" pkg="rosneuro_integrator" type="integrator" output="screen">
		<rosparam param="plugin" subst_value="True">$(arg integratorplugin)</rosparam>
		<rosparam param="alpha" subst_value="True">$(arg alpha)</rosparam>
		<rosparam param="rejections" subst_value="True">$(arg rejections)</rosparam>
		<remap from="/smr/neuroprediction" to="/smrbci/neuroprediction"/>
		<remap from="/integrated" to="/integrator/neuroprediction"/>
	</node> 

  	<!-- neurowheel node -->
	<node name="controlwheel" pkg="rosneuro_feedback_wheel" type="controlwheel"  output="screen">
		<rosparam param="thresholds" subst_value="True">$(arg thresholds)</rosparam>
		<rosparam param="classes" subst_value="True">$(arg classes)</rosparam>
	</node>
	
	<!-- Game controller for navigation -->
	<node pkg="rosneuro_cybathlon_controller" type="navigation_controller" name="navigation_controller" output="screen">
		<rosparam param="thresholds" subst_value="True">$(arg thresholds)</rosparam>
		<rosparam param="classes" subst_value="True">$(arg classes)</rosparam>
		<rosparam param="is_discrete" subst_value="True">$(arg is_discrete)</rosparam>
		<rosparam param="linear_strength" subst_value="True">$(arg linear_strength)</rosparam>
		<rosparam param="angular_strength" subst_value="True">$(arg angular_strength)</rosparam>
	</node>

	<!-- interface to the game -->
	<node pkg="ros_cybathlon_interface" type="gameinterface" name="gameinterface" output="screen">
		<param name="~game_address" value="$(arg game_address)"/>
		<param name="~game_port"  	value="$(arg game_port)"/>
	</node>


	<node pkg="rqt_reconfigure" type="rqt_reconfigure" name="reconfigure" />


</launch>
